<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// text perameters
size = 12;
cmd="";
txtClr = make_color_rgb(190,190,190);
txtClrSpec = make_color_rgb(99,99,99);
txtClrPlr = make_color_rgb(72,168,176);
//origin of where the text will start
x = 35;
y = 35;
angle = 0;
fnt1 = font_add("Px437_PhoenixEGA_8x16.ttf",size,0,0,32,128);
fnt2 = font_add("Px437_PhoenixEGA_8x16.ttf",12,0,0,32,128);
draw_set_font(fnt1);

//begin text
scr_createDrawText(obj_commandTxt.txt[0]);

//inventory stuff
invFood = "";
invDrinks = "";
invItems = "";

//event
event = 0;
line = 0; // the current text line in the event
nextline = 0; //used as a switch to check if the next line should be drawn
decide = 0; //set to one if the player needs to make a decision (disables the next command)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///select new command text
if  (event==0)&amp;&amp;(obj_drawTextbox.submit==1) {
    switch (cmd) {
    case "":
        break;
    
    case "scream":
        scr_createDrawText(obj_commandTxt.txt[3]);
        break;
        
    case "cry":
        if (obj_gameInfo.dp&lt;75) {
            scr_createDrawText(obj_commandTxt.txt[4]);
        } else {
            obj_gameInfo.dp-=2;
            obj_gameInfo.hd-=5;
            scr_createDrawText(obj_commandTxt.txt[5]);
        }
        break;
        
    case "im lost":
        scr_createDrawText(obj_commandTxt.txt[6]);
        break;
        
    case "engine on":
        if (obj_car.spd==1) {
            scr_createDrawText(obj_commandTxt.txt[10]);
        } else {
            if (obj_mapData.carBroke == 1) {
                scr_createDrawText(obj_commandTxt.txt[13]);
            } else {
                scr_createDrawText(obj_commandTxt.txt[7]);
                obj_car.spd=1;
            }
        }
        break;
        
    case "engine off":
        if (obj_car.spd==0) {
            scr_createDrawText(obj_commandTxt.txt[9]);
        } else {
            scr_createDrawText(obj_commandTxt.txt[8]);
            obj_car.spd=0;
        }
        break;
        
    case "use toilet":
        if (obj_gameInfo.tp&gt;0) {
            scr_createDrawText(obj_commandTxt.txt[11]);
            obj_gameInfo.tp -= 1;
            obj_gameInfo.dp -= 2;
        } else {
            scr_createDrawText(obj_commandTxt.txt[12]);
        }
        break;
        
    case "food":
        invFood = obj_commandTxt.txt[16];
        for (i=0; i&lt;array_length_1d(obj_gameInfo.food); i++) {
            if obj_gameInfo.food[i]&gt;0 {
                invFood = invFood + "#" + obj_gameInfo.foodn[i] + " x" + string(obj_gameInfo.food[i]);
            }
        }
        scr_createDrawText(invFood);
        break;
        
    case "drinks":
        invDrinks = obj_commandTxt.txt[16];
        for (i=0; i&lt;array_length_1d(obj_gameInfo.drink); i++) {
            if obj_gameInfo.drink[i]&gt;0 {
                invDrinks = invDrinks + "#" + obj_gameInfo.drinkn[i] + " x" + string(obj_gameInfo.drink[i]);
            }
        }
        scr_createDrawText(invDrinks);
        break;  
        
    case "eat moldy pineapple": //moldy pineapple
        if (obj_gameInfo.food[0]&gt;0) {
            obj_gameInfo.ar -= 5;
            obj_gameInfo.dp += 5;
            obj_gameInfo.hg -= 10;
            obj_gameInfo.food[0]--;
            scr_createDrawText(obj_commandTxt.txt[18]);
        } else {
            scr_createDrawText("You dont have any#" + string(obj_gameInfo.foodn[0]));
        }
        break;
        
    case "eat canned hotdog": 
        if (obj_gameInfo.food[1]&gt;0) {
            obj_gameInfo.food[1]--;
            obj_gameInfo.hg -= 20;
            scr_createDrawText(obj_commandTxt.txt[19]);
        } else {
            scr_createDrawText("You dont have any#" + string(obj_gameInfo.foodn[1]));
        }
        break;
        
    case "eat candy bar": 
        if (obj_gameInfo.food[2]&gt;0) {
            obj_gameInfo.hg -= 10;
            obj_gameInfo.food[2]--;
            scr_createDrawText(obj_commandTxt.txt[20]);
        } else {
            scr_createDrawText("You dont have any#" + string(obj_gameInfo.foodn[2]));
        }
        break;
        
    case "eat fast food": 
        if (obj_gameInfo.food[3]&gt;0) {
            obj_gameInfo.hg -= 10;
            obj_gameInfo.food[3]--;
            scr_createDrawText(obj_commandTxt.txt[21]);
        } else {
            scr_createDrawText("You dont have any#" + string(obj_gameInfo.foodn[3]));
        }
        break;
        
    case "eat yellow substance": 
        if (obj_gameInfo.food[4]&gt;0) {
            obj_gameInfo.fr += 5;
            obj_gameInfo.hg -= 10;
            obj_gameInfo.food[4]--;
            scr_createDrawText(obj_commandTxt.txt[22]);
        } else {
            scr_createDrawText("You dont have any#" + string(obj_gameInfo.foodn[4]));
        }
        break;
        
    case "eat stringy meat": 
        if (obj_gameInfo.food[5]&gt;0) {
            obj_gameInfo.dp += 10;
            obj_gameInfo.hg -= 10;
            obj_gameInfo.food[5]--;
            scr_createDrawText(obj_commandTxt.txt[23]);
        } else {
            scr_createDrawText("You dont have any#" + string(obj_gameInfo.foodn[5]));
        }
        break;
        
    case "eat rocks": 
        if (obj_gameInfo.food[6]&gt;0) {
            obj_gameInfo.food[6]--;
            obj_gameInfo.hp-=5;
            obj_gameInfo.hg-=5;
            scr_createDrawText(obj_commandTxt.txt[24]);
        } else {
            scr_createDrawText("You dont have any#" + string(obj_gameInfo.foodn[6]));
        }
        break;
        
    case "eat glowing aura": 
        if (obj_gameInfo.food[7]&gt;0) {
            obj_gameInfo.hd -= 5;
            obj_gameInfo.dp -= 10;
            obj_gameInfo.hg -= 10;
            obj_gameInfo.food[7]--;
            scr_createDrawText(obj_commandTxt.txt[25]);
        } else {
            scr_createDrawText("You dont have any#" + string(obj_gameInfo.foodn[7]));
        }
        break;
        
    case "eat survival ration": 
        if (obj_gameInfo.food[8]&gt;0) {
            obj_gameInfo.dp += 5;
            obj_gameInfo.hg -= 10;
            obj_gameInfo.food[8]--;
            scr_createDrawText(obj_commandTxt.txt[26]);
        } else {
            scr_createDrawText("You dont have any#" + string(obj_gameInfo.foodn[8]));
        }
        break;
        
    case "drink bottled mist": 
        if (obj_gameInfo.drink[0]&gt;0) {
            obj_gameInfo.drink[0]--;
            obj_gameInfo.hd += 15;
            obj_gameInfo.hp -= 5;
            scr_createDrawText(obj_commandTxt.txt[27]);
        } else {
            scr_createDrawText("You dont have any#" + string(obj_gameInfo.drinkn[0]));
        }
        break;
        
    case "drink bottled water": 
        if (obj_gameInfo.drink[1]&gt;0) {
            obj_gameInfo.drink[1]--;
            obj_gameInfo.hd += 20;
            scr_createDrawText(obj_commandTxt.txt[28]);
        } else {
            scr_createDrawText("You dont have any#" + string(obj_gameInfo.drinkn[1]));
        }
        break;
        
    case "drink energy drink": 
        if (obj_gameInfo.drink[2]&gt;0) {
            obj_gameInfo.hd += 7;
            obj_gameInfo.drink[2]--;
            scr_createDrawText(obj_commandTxt.txt[29]);
        } else {
            scr_createDrawText("You dont have any#" + string(obj_gameInfo.drinkn[2]));
        }
        break;
        
    case "drink blood": 
        if (obj_gameInfo.drink[3]&gt;0) {
            obj_gameInfo.hd += 5;
            obj_gameInfo.hp += 20;
            obj_gameInfo.drink[3]--;
            scr_createDrawText(obj_commandTxt.txt[30]);
        } else {
            scr_createDrawText("You dont have any#" + string(obj_gameInfo.drinkn[3]));
        }
        break;
        
    case "drink pulsating liquid": 
        if (obj_gameInfo.drink[4]&gt;0) {
            obj_gameInfo.dp -= 20;
            obj_gameInfo.drink[4]--;
            scr_createDrawText(obj_commandTxt.txt[31]);
        } else {
            scr_createDrawText("You dont have any#" + string(obj_gameInfo.drinkn[4]));
        }
        break;
        
    case "drink coffee": 
        if (obj_gameInfo.drink[5]&gt;0) {
            obj_gameInfo.hd += 5;
            obj_gameInfo.drink[5]--;
            scr_createDrawText(obj_commandTxt.txt[32]);
        } else {
            scr_createDrawText("You dont have any#" + string(obj_gameInfo.drinkn[5]));
        }
        break;
        
    case "drink fresh milk": 
        if (obj_gameInfo.drink[6]&gt;0) {
            obj_gameInfo.hd += 15;
            obj_gameInfo.drink[6]--;
            scr_createDrawText(obj_commandTxt.txt[33]);
            obj_gameInfo.skinRed = 1;
        } else {
            scr_createDrawText("You dont have any#" + string(obj_gameInfo.drinkn[6]));
        }
        break;
        
    case "drink battery acid": 
        if (obj_gameInfo.drink[7]&gt;0) {
            obj_gameInfo.drink[7]--;
            obj_gameInfo.hp-=45;
            obj_gameInfo.dp-=20;
            scr_createDrawText(obj_commandTxt.txt[34]);
        } else {
            scr_createDrawText("You dont have any#" + string(obj_gameInfo.drinkn[7]));
        }
        break;
        
    case "items":
        invItems = obj_commandTxt.txt[16];
        for (i=0; i&lt;array_length_1d(obj_gameInfo.item); i++) {
            if obj_gameInfo.item[i]&gt;0 {
                invItems = invItems + "#" + obj_gameInfo.itemn[i] + " x" + string(obj_gameInfo.item[i]);
            }
        }
        scr_createDrawText(invItems);
        break;
        
    case "use greasy magazine":
        if (obj_gameInfo.item[0]&gt;0) {
            obj_gameInfo.ar+=10;
            obj_gameInfo.item[0]--;
            scr_createDrawText(obj_commandTxt.txt[35]);
        } else {
            scr_createDrawText("You dont have any#" + string(obj_gameInfo.itemn[0]));
        }
        break;
        
    case "use jar of teeth":
        if (obj_gameInfo.item[1]&gt;0) {
            obj_gameInfo.hp+=5;
            obj_gameInfo.item[1]--;
            scr_createDrawText(obj_commandTxt.txt[37]);
        } else {
            scr_createDrawText("You dont have any#" + string(obj_gameInfo.itemn[1]));
        }
        break;
        
    case "use coffee filter":
        if (obj_gameInfo.item[2]&gt;0) {
            obj_mapData.radiatorHp+=10;
            obj_gameInfo.item[2]--;
            scr_createDrawText(obj_commandTxt.txt[38]);
        } else {
            scr_createDrawText("You dont have any#" + string(obj_gameInfo.itemn[2]));
        }
        break;
        
    case "collect rocks":
        obj_gameInfo.food[6]++;
        scr_createDrawText(obj_commandTxt.txt[36]);
        break;
        
    case "play joyride":
        scr_stopSongs();
        audio_play_sound(snd_track1,1,0);
        scr_createDrawText(obj_commandTxt.txt[39]);
        break;
        
    case "play repose":
        scr_stopSongs();
        audio_play_sound(snd_track2,1,0);
        scr_createDrawText(obj_commandTxt.txt[39]);
        break;    
    
    case "play beat":
        scr_stopSongs();
        audio_play_sound(snd_track3,1,0);
        scr_createDrawText(obj_commandTxt.txt[39]);
        break;
        
    case "stop song":
        scr_stopSongs();
        scr_createDrawText(obj_commandTxt.txt[40]);
        break;
        
    default:
        scr_createDrawText(obj_commandTxt.txt[2]);
        break;
    }
    obj_drawTextbox.submit=0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// events
if (event&gt;0) { //when an event start create the object to cover up the map and set event to equal 1
    
    if (nextline==1) {
        scr_createDrawTextEvent(obj_commandTxt.eventTxt[event,line]);    
        nextline = 0;
    }
    
    obj_car.spd = 0; 
    if (obj_drawTextbox.submit==1) {
        switch (cmd) {
            case "":
                break;
                
            case "next": //this hole next case is a mess
                if (decide==1) {
                    scr_createDrawText(obj_commandTxt.eventTxt[0,0]);
                    break;
                } else {
                    if (line &gt;= obj_commandTxt.eventLength[event]) {
                        switch (event) { //add effects of the event then close the event
                            case 1:
                                if (line==2) {
                                    obj_gameInfo.bt -= 1;
                                    scr_eventClose();
                                } else {
                                    scr_eventClose();
                                }
                                break;
                        
                            case 2:
                                if (line==3) {
                                    obj_gameInfo.dp -= 10;
                                    obj_gameInfo.ar += 5;
                                    scr_eventClose();
                                } else {
                                    scr_eventClose();
                                }
                                break;
                                
                            case 3:
                                obj_gameInfo.fr += 5;
                                scr_eventClose();
                                break;    
                                
                            case 4:
                                if (line==4) {
                                    obj_gameInfo.item[0] += 3;
                                    scr_eventClose();
                                } else {
                                    scr_eventClose();
                                }
                                break;
                               
                            case 5:
                                if (line==9) {
                                    obj_gameInfo.hg += 25;
                                    scr_eventClose();
                                } else if (line==14) {
                                    obj_gameInfo.food[4] += 1;
                                    obj_gameInfo.fr += 15;
                                    obj_mapData.radiatorHp -= 25;
                                    scr_eventClose();
                                } else {
                                    nextline = 1; // otherwise iterate to the next part of the event
                                    line++;
                                }
                                break;
                                
                            case 6:
                                if (line==4) {
                                    obj_gameInfo.food[5] += 1;
                                    obj_gameInfo.drink[3] += 1;
                                    scr_eventClose();
                                } else {
                                    scr_eventClose();
                                }
                                break;
                                
                            case 7:
                                if (line==8) {
                                    obj_gameInfo.hp -= 30;
                                    obj_gameInfo.dp += 10;
                                    obj_gameInfo.fr += 10;
                                    scr_eventClose();
                                } else {
                                    obj_gameInfo.food[7] += 1;
                                    scr_eventClose();
                                }
                                break;
                                
                            case 8:
                                if (line==4) {
                                    obj_gameInfo.item[1] += 1;
                                    scr_eventClose();
                                } else {
                                    scr_eventClose();
                                }
                                break;
                                
                            case 9:
                                obj_gameInfo.drink[7] += 1;
                                scr_eventClose();
                                break;
                                
                            case 10:
                                obj_gameInfo.dp += 15;
                                scr_eventClose();
                                break;
                                
                            case 11:
                                if (line==4) {
                                    obj_gameInfo.item[2] += 2;
                                    scr_eventClose();
                                } else {
                                    scr_eventClose();
                                }
                                break;
                                
                            case 12:
                                if (line==3) {
                                    obj_gameInfo.fr += 15;
                                    scr_eventClose();
                                } else {
                                    scr_eventClose();
                                }
                                break;
                        }
                    } else {
                        nextline = 1; // otherwise iterate to the next part of the event
                        line++;         
                    }
                }
                break;
                
            case "flee":
                if (event!=5) {
                    scr_createDrawText(obj_commandTxt.eventTxt[0,0]);
                    break;
                }
            case "avoid":
                if (decide==1) {
                switch (event) { //tells the code where to jump to for the next line
                            case 1:
                                line = 3;
                                nextline = 1;
                                break;
                        
                            case 2:
                                line = 4;
                                nextline = 1;
                                break;
                                
                            case 3:

                                break;
                                
                            case 4:
                                line = 5;
                                nextline = 1;
                                break;
                                
                            case 5:
                                line = 10;
                                nextline = 1;
                                break;
                                
                            case 6:
                                line = 5;
                                nextline = 1;
                                break;
                            
                            case 7:
                                line = 9;
                                nextline = 1;
                                break;
                                
                            case 8:
                                line = 5;
                                nextline = 1;
                                break;
                                
                            case 11:
                                line = 5;
                                nextline = 1;
                                break;
                                
                            case 12:
                                line = 4;
                                nextline = 1;
                                break;
                        }
                } else {
                    scr_createDrawText(obj_commandTxt.eventTxt[0,0]);
                }
                break;
            
            case "wait":
                if (event!=5) {
                    scr_createDrawText(obj_commandTxt.eventTxt[0,0]);
                    break;
                }
            case "investigate":
                if (decide==1) {
                    nextline = 1;
                    line++;   
                } else {
                    scr_createDrawText(obj_commandTxt.eventTxt[0,0]);
                }
                break;
                
                
            default:
                scr_createDrawText(obj_commandTxt.eventTxt[0,0]);
                break;
        }
    obj_drawTextbox.submit=0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set decide veriable if
if (event!=0) {
    switch (event) {
        case 1:
            if line==1 {
                decide = 1;
            } else {
                decide = 0;
            }
            break;
        
        case 2:
            if line==1 {
                decide = 1;
            } else {
                decide = 0;
            }
            break;
            
        case 3:
            break;
            
        case 4:
            if line==2 {
                decide = 1;
            } else {
                decide = 0;
            }
            break;
            
        case 5:
            if line==2 {
                decide = 1;
            } else {
                decide = 0;
            }
            break;
            
        case 6:
            if line==2 {
                decide = 1;
            } else {
                decide = 0;
            }
            break;
            
        case 7:
            if line==1 {
                decide = 1;
            } else {
                decide = 0;
            }
            break;
            
        case 8:
            if line==2 {
                decide = 1;
            } else {
                decide = 0;
            }
            break;
            
        case 11:
            if line==2 {
                decide = 1;
            } else {
                decide = 0;
            }
            break;
            
        case 12:
            if line==1 {
                decide = 1;
            } else {
                decide = 0;
            }
            break;
            
        default:
            decide = 0;
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
