<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_car</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// image speed
image_speed = 0.05
spd = 0;
carspd = 1
collisionSwitch = 0

//for picking up cargo
crgo = "";
fd = 0;
dr = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// push car 1 unit
var angle = abs(image_angle);
audio_play_sound(snd_move,2,0);

switch (angle) {
        case 45:
            if (sign(image_angle)==1) {
                obj_mapData.x-=carspd;
                obj_mapData.y+=carspd;
            } else {
                obj_mapData.x+=carspd;
                obj_mapData.y+=carspd;
            }
            break;
            
        case 90:
            if (sign(image_angle)==1) {
                obj_mapData.x-=carspd;
            } else {
                obj_mapData.x+=carspd;
            }
            break;
            
        case 135:
            if (sign(image_angle)==1) {
                obj_mapData.x-=carspd;
                obj_mapData.y-=carspd;
            } else {
                obj_mapData.x+=carspd;
                obj_mapData.y-=carspd;
            }    
        
            break;
            
        case 225:
            if (sign(image_angle)==1) {
                obj_mapData.x+=carspd;
                obj_mapData.y-=carspd;
            } else {
                obj_mapData.x-=carspd;
                obj_mapData.y-=carspd;
            }    
        
            break;
            
        case 270:
            if (sign(image_angle)==1) {
                obj_mapData.x+=carspd;
            } else {
                obj_mapData.x-=carspd;
            }    
        
            break;
            
        case 315:
            if (sign(image_angle)==1) {
                obj_mapData.x+=carspd;
                obj_mapData.y+=carspd;
            } else {
                obj_mapData.x-=carspd;
                obj_mapData.y+=carspd;
            }    
        
            break;
            
        case 0:
                //obj_mapData.x+=0;
                obj_mapData.y+=carspd;
            break;
            
        case 180:
                //obj_mapData.x+=0;
                obj_mapData.y-=carspd;
            break;
    }
collisionSwitch = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn Car
if (obj_drawTextbox.type==0)&amp;&amp;(obj_drawTerminal.type==0) {
    if (obj_textCont.event==0) {
        if (keyboard_check_pressed(ord('D'))) {
            image_angle -=45;
        }
        if (keyboard_check_pressed(ord('A'))) {
            image_angle += 45;
        }
    }
    //reset angle
    if (image_angle=360)||(image_angle=-360) {
        image_angle = 0;
    }
    /*
    //engine on / off with keys
    if (keyboard_check_pressed(ord('W'))) {
        spd = 1;
    }
    if (keyboard_check_pressed(ord('S'))) {
        spd = 0;
    }
    */
}

//if speed is 0 image speed = 0
if (spd==1) {
    image_speed = 0.05
} else {
    image_speed = 0
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move car on map and break car

if (spd==1) {
    if (alarm[0]=0)||(alarm[0]=-1) {//sets alarm
    alarm[0] = 60
    }
} else {
    alarm[0] = -1
}

if (obj_mapData.radiatorHp==0) {
    obj_mapData.carBroke = 1;
} else {
    obj_mapData.carBroke = 0;
}
if (obj_mapData.carBroke == 1) {
    spd = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///car collision
if (obj_mapData.drt[obj_mapData.x+500,obj_mapData.y+500]&gt;1) {
    if  (obj_mapData.drt[obj_mapData.x+500,obj_mapData.y+500]==2)&amp;&amp;(collisionSwitch == 1) {
        obj_mapData.radiatorHp -=25
        obj_gameInfo.dp += 15
        scr_createDrawText(obj_commandTxt.txt[14]); //drive into rock message
        spd = 0;
        collisionSwitch = 0;
        audio_play_sound(snd_hit,2,0);
        obj_mapData.drt[obj_mapData.x+500,obj_mapData.y+500] = 5;
    } else if (obj_mapData.drt[obj_mapData.x+500,obj_mapData.y+500]==3)&amp;&amp;(collisionSwitch == 1) {
        fd = choose(1,2,8);
        dr = choose(1,2,5);
        fds = choose(0,1,2);
        drs = choose(0,1,2);
        obj_gameInfo.food[fd] += fds;
        obj_gameInfo.drink[dr] += drs;
        crgo = obj_commandTxt.txt[15];
        if (fds&gt;0) {
            crgo += "#+" + string(fds) + " " +obj_gameInfo.foodn[fd];
        }
        if (drs&gt;0) {
            crgo += "#+" + string(drs) + " " +obj_gameInfo.drinkn[dr];
        }
        if (drs==0)&amp;&amp;(fds==0) {
            crgo += "#It was empty."
        }
        audio_play_sound(snd_cargo,2,0);
        scr_createDrawText(crgo); //get cargo
        collisionSwitch = 0;
        obj_mapData.drt[obj_mapData.x+500,obj_mapData.y+500] = 0;
    } else if (obj_mapData.drt[obj_mapData.x+500,obj_mapData.y+500]==4)&amp;&amp;(collisionSwitch == 1) {
        
        obj_mapData.drt[obj_mapData.x+500,obj_mapData.y+500] = 0;
        randomize();
        
        cnt = 0;
        evn = irandom(10)+1;
        while (obj_commandTxt.eventDone[evn]==1) {
            evn = irandom(10)+1;
            cnt++
            if (cnt==25) {
                evn = 0;
                for (i = 1; i&lt;array_length_1d(obj_commandTxt.eventDone); i++) {
                    if (obj_commandTxt.eventDone[i]==0) {
                        evn = i;
                    }
                }
                if (evn==0) {
                    evn = 4;
                    obj_commandTxt.eventDone[4] = 0;
                }
            }
        }
        
        obj_textCont.event = evn //set event to the current event number, if no event event = 0;
        obj_commandTxt.eventDone[evn] = 1;
        obj_textCont.line = 0;
        obj_textCont.nextline = 1;
        instance_create(0,0,obj_mapCover);
        collisionSwitch = 0;
        obj_mapData.drt[obj_mapData.x+500,obj_mapData.y+500] = 0;
        audio_play_sound(snd_event,2,0);
    } 
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///border of map
if obj_mapData.x&gt;=496 {
    obj_mapData.x=496;
}
if obj_mapData.x&lt;=-496 {
    obj_mapData.x=-496;
}

if obj_mapData.y&gt;=496 {
    obj_mapData.y=496;
}
if obj_mapData.y&lt;=-496 {
    obj_mapData.y=-496;
}

//draw text

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
