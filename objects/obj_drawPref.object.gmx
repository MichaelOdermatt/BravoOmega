<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///strings
fllscrn[1] = "Fullscreen: ON"
fllscrn[0] = "Fullscreen: OFF"

ms[1] = "Immersive Mouse: ON"
ms[0] = "Immersive Mouse: OFF"

res[0] = "Resolution: 512x512"
res[1] = "Resolution: 768x768"
res[2] = "Resolution: 960x960"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mouse_check_button_pressed(mb_left) {
    // fullscreen
    if (mouse_x&gt;=(room_width/2)-string_width(fllscrn[obj_pref.fullscreen]))&amp;&amp;(mouse_x&lt;=(room_width/2)+string_width(fllscrn[obj_pref.fullscreen]))&amp;&amp;(mouse_y&gt;=32)&amp;&amp;(mouse_y&lt;=44) {
        if obj_pref.fullscreen == 0 {
            obj_pref.fullscreen = 1;
        } else {
            obj_pref.fullscreen = 0;
        }
    }
    //mouse
    if (mouse_x&gt;=(room_width/2)-string_width(ms[obj_pref.mouse])/2)&amp;&amp;(mouse_x&lt;=(room_width/2)+string_width(ms[obj_pref.mouse])/2)&amp;&amp;(mouse_y&gt;=64)&amp;&amp;(mouse_y&lt;=76) {
        if obj_pref.mouse == 0 {
            obj_pref.mouse = 1;
        } else {
            obj_pref.mouse = 0;
        }
    }
    
    //resolution
    if (mouse_x&gt;=(room_width/2)-string_width(res[obj_pref.res])/2)&amp;&amp;(mouse_x&lt;=(room_width/2)+string_width(res[obj_pref.res])/2)&amp;&amp;(mouse_y&gt;=96)&amp;&amp;(mouse_y&lt;=108) {
        if (obj_pref.res!=2) {
            obj_pref.res++;
        } else {
            obj_pref.res = 0;
        }
    }
    
    //apply
    if (mouse_x&gt;=(room_width/2)-string_width("Apply")/2)&amp;&amp;(mouse_x&lt;=(room_width/2)+string_width("Apply")/2)&amp;&amp;(mouse_y&gt;=468)&amp;&amp;(mouse_y&lt;=480) {
        room_goto(rm_menu);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw settings
draw_set_font(obj_pref.fnt1);
draw_set_color(obj_pref.txtClr);

// fullscreen
if (mouse_x&gt;=(room_width/2)-string_width(fllscrn[obj_pref.fullscreen]))&amp;&amp;(mouse_x&lt;=(room_width/2)+string_width(fllscrn[obj_pref.fullscreen]))&amp;&amp;(mouse_y&gt;=32)&amp;&amp;(mouse_y&lt;=44) {
    draw_set_color(obj_pref.txtClr);
    draw_rectangle(32, 32, 480, 44,0);
    draw_set_color(c_black);
    draw_text((room_width/2)-string_width(fllscrn[obj_pref.fullscreen])/2,32,fllscrn[obj_pref.fullscreen])
} else {
    draw_set_color(obj_pref.txtClr);
    draw_text((room_width/2)-string_width(fllscrn[obj_pref.fullscreen])/2,32,fllscrn[obj_pref.fullscreen])
}

//mouse
if (mouse_x&gt;=(room_width/2)-string_width(ms[obj_pref.mouse])/2)&amp;&amp;(mouse_x&lt;=(room_width/2)+string_width(ms[obj_pref.mouse])/2)&amp;&amp;(mouse_y&gt;=64)&amp;&amp;(mouse_y&lt;=76) {
    draw_set_color(obj_pref.txtClr);
    draw_rectangle(32, 64, 480, 76,0);
    draw_set_color(c_black);
    draw_text((room_width/2)-string_width(ms[obj_pref.mouse])/2,64,ms[obj_pref.mouse])
} else {
    draw_set_color(obj_pref.txtClr);
    draw_text((room_width/2)-string_width(ms[obj_pref.mouse])/2,64,ms[obj_pref.mouse])
}

//resolution
if (mouse_x&gt;=(room_width/2)-string_width(res[obj_pref.res])/2)&amp;&amp;(mouse_x&lt;=(room_width/2)+string_width(res[obj_pref.res])/2)&amp;&amp;(mouse_y&gt;=96)&amp;&amp;(mouse_y&lt;=108) {
    draw_set_color(obj_pref.txtClr);
    draw_rectangle(32, 96, 480, 108,0);
    draw_set_color(c_black);
    draw_text((room_width/2)-string_width(res[obj_pref.res])/2,96,res[obj_pref.res])
} else {
    draw_set_color(obj_pref.txtClr);
    draw_text((room_width/2)-string_width(res[obj_pref.res])/2,96,res[obj_pref.res])
}

//apply
if (mouse_x&gt;=(room_width/2)-string_width("Apply")/2)&amp;&amp;(mouse_x&lt;=(room_width/2)+string_width("Apply")/2)&amp;&amp;(mouse_y&gt;=468)&amp;&amp;(mouse_y&lt;=480) {
    draw_set_color(obj_pref.txtClr);
    draw_rectangle(32, 468, 480, 480,0);
    draw_set_color(c_black);
    draw_text((room_width/2)-string_width("Apply")/2,468,"Apply")
} else {
    draw_set_color(obj_pref.txtClr);
    draw_text((room_width/2)-string_width("Apply")/2,468,"Apply")
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
