<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///colors
rate = 2.5;
r = 0;
g = 0;
b = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///rate
r+=rate/2;
g-=rate*2;
b+=rate/5;
if r&gt;255 {r=0;}
if g&lt;0 {g=255;}
if b&gt;255 {b=0;}
clr = make_color_rgb(r,g,b);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw

//draw color
if obj_displayCont.codeExists = 1 {
    draw_set_color(clr);
    draw_rectangle(288,32,480,224,0);
}

//draw recharge bar
lvl = (obj_displayCont.charge/100)*(224-32)
draw_set_color(obj_displayCont.chargeClr);
draw_rectangle(480,224-lvl,485,224,0);
draw_set_color(obj_displayCont.borderClr);
draw_rectangle(288,32,485,224,1);

//draw border
draw_set_color(obj_displayCont.borderClr);
draw_rectangle(288,32,480,224,1);
draw_rectangle(286,30,487,226,1);

if obj_displayCont.codeExists = 1 {
    //text
    draw_set_color(obj_displayCont.borderClr);
    draw_set_font(obj_displayCont.fnt2);
    for (i = 0; i&lt; 10; i++) {
    draw_text(384-string_width(obj_displayCont.code)/2,128-string_height(obj_displayCont.code)/2,obj_displayCont.code)
    }

    //draw dots
    draw_set_font(obj_displayCont.fnt1);
    draw_text(384-string_width(obj_displayCont.points)/2,222-string_height(obj_displayCont.points),obj_displayCont.points)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
