<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// data
x = 0
y = 0
radiatorHp = 100;
//fuelPumpHp = 100;
//engineHp = 100;
//engineTemp = 0;
carBroke = 0;

mapSize = 1000

randomize();
//generate map
for (i=0; i&lt;mapSize; i++) {
    for (j=0; j&lt;mapSize; j++) {
        
        //make sure to check for smaller probablilities first
        rockprob = irandom(100)//proaablitiys of hitting a rock 10/100
        cargoprob = irandom(10000) //probability of hittinga cargo drop 19/10000
        eventprob = irandom(1000) //probability of hittinga an event drop 1/1000
        if (cargoprob&lt;=19) { //chance of rocks spawning
            drt[i,j] = 3; //generate either a epty space or dirt space
        } else if (eventprob&lt;=1) {
            drt[i,j] = 4;
        } else if (rockprob&lt;=10) { //chance of rocks spawning
            drt[i,j] = 2; //generate either a epty space or dirt space
            drtt[i,j] = irandom(5); //choose texture
        } else {
            drt[i,j] = irandom(1);  //generate either a epty space or dirt space
            drtt[i,j] = irandom(12); //choose texture
        }
    }
}

//make it safe where the player spawns
drt[500,500] = 0;
drt[501,500] = 0;
drt[499,500] = 0;
drt[500,501] = 0;
drt[501,501] = 0;
drt[499,501] = 0;
drt[500,499] = 0;
drt[501,499] = 0;
drt[499,499] = 0;

//make exit //3 = the exit
/*
q = random(3);
switch (q) {
case 0:
    exitCords[0] = 994 // exitCords[0] = x, exitCords[1] = y
    exitCords[1] = random_range(6,994);
    drt[exitCords[0],exitCords[1]] = 3;
    break;

case 1:
    exitCords[0] = 6 // exitCords[0] = x, exitCords[1] = y
    exitCords[1] = random_range(6,994);
    drt[exitCords[0],exitCords[1]] = 3;
    break;

case 2:
    exitCords[0] = random_range(6,994) // exitCords[0] = x, exitCords[1] = y
    exitCords[1] = 994
    drt[exitCords[0],exitCords[1]] = 3;
    break;

case 3:
    exitCords[0] = random_range(6,994) // exitCords[0] = x, exitCords[1] = y
    exitCords[1] = 6
    drt[exitCords[0],exitCords[1]] = 3;
    break;
}
*/
//for test drt[500,501] = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
